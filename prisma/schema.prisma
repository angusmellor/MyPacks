generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Account {
    id                String    @id @default(auto()) @map("_id") @db.ObjectId
    userId            String    @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String? 
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id              String      @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken    String      @unique
    userId          String      @db.ObjectId
    expires         DateTime
    user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id              String      @id @default(auto()) @map("_id") @db.ObjectId
    name            String?
    email           String?     @unique
    emailVerified   DateTime?
    image           String?
    accounts        Account[]
    sessions        Session[]
}

model VerificationToken {
    id              String      @id @default(auto()) @map("_id") @db.ObjectId
    identifier      String
    token           String      @unique
    expires         DateTime

    @@unique([identifier, token])
}

model Item {
  id Int @id @default(autoincrement())
  name String
  description String
  weight Float
  cost Float ?
  users User[]
  packs Pack[]
}

model Pack {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  name String
  trail String
  isWinter Boolean @default(false)
  isSummer Boolean @default(false)
  isSolo Boolean @default(true)
  isGroup Boolean @default(false)
  isFemale Boolean @default(false)
  categorys Category[]
}

type Category {
    name String
    items Item[]
}



